import Head from "next/head";
import Header from "../components/header";
import { Container, Spinner, Text, VStack } from "@chakra-ui/react";
import { useEffect } from "react";
import { NextPage } from "next/types";
import Search from "../components/search";
import CurrentWeather from "../components/current-weather";
import { observer } from "mobx-react-lite";
import { WeatherStore } from "../models/weather-store";
import { useStore } from "mobx-store-provider";
import Forecast from "../components/forecast";

const Home: NextPage = observer(() => {
  const weatherStore = useStore(WeatherStore);
  const {
    currentWeather,
    forecast,
    isLoading,
    fetchWeather,
    fetchUserLocation,
    setIsLoading,
  } = weatherStore;

  // Get users location on mount
  useEffect(() => {
    setIsLoading();
    navigator.geolocation.getCurrentPosition(
      (position: GeolocationPosition) => {
        fetchUserLocation(position);
      }
    );
  }, [fetchUserLocation, setIsLoading]);

  return (
    <>
      <Head>
        <title>Best Weather App Ever</title>
        <meta
          name="The ultimate weather app by Phill Aelony! Created with NextJS 13, typescript, mobx-state tree, and ChakraUI!"
          content="Generated by create next app"
        />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <Container
          maxW="2xl"
          centerContent
          p={8}
          borderRadius={10}
          textAlign="center"
          minH="500px"
        >
          <Search onSearchChange={fetchWeather} />
          {isLoading ? (
            <VStack pt={8} spacing={8}>
              <Text>Searching for your city ...</Text>
              <Spinner
                thickness="4px"
                speed="0.65s"
                emptyColor="gray.200"
                color="blue.500"
                size="xl"
                p={8}
              />
            </VStack>
          ) : (
            <>
              {currentWeather && <CurrentWeather data={currentWeather} />}
              {forecast && <Forecast data={forecast} />}
            </>
          )}
        </Container>
      </main>
    </>
  );
});

export default Home;
